{"mappings":"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","sources":["<anon>","src/script.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", ()=>{\n    const API_KEY = \"Q9g0LF0Pk3m1RpAG05nUd6uhmJO4X5sp\";\n    const articleContainer = document.getElementById(\"articles\");\n    const searchButton = document.getElementById(\"search-button\");\n    const articlesTitle = document.getElementById(\"articles-title\");\n    const fallbackImage = \"https://via.placeholder.com/300\";\n    async function fetchTopStoriesBySection(section) {\n        try {\n            const response = await fetch(`https://api.nytimes.com/svc/topstories/v2/${section}.json?api-key=${API_KEY}`);\n            if (!response.ok) throw new Error(\"Network response was not ok\");\n            const data = await response.json();\n            return data.results.slice(0, 3); // Return top 3 stories\n        } catch (error) {\n            console.error(`Error fetching Top Stories for ${section}:`, error);\n            return [];\n        }\n    }\n    async function fetchAndDisplayTopStories() {\n        const sections = [\n            \"world\",\n            \"business\",\n            \"technology\",\n            \"health\",\n            \"sports\"\n        ];\n        const topArticles = [];\n        for (let section of sections){\n            const articles = await fetchTopStoriesBySection(section);\n            if (articles.length > 0) topArticles.push({\n                section,\n                articles\n            });\n        }\n        displayTopStoriesBySection(topArticles);\n    }\n    function displayTopStoriesBySection(topArticles) {\n        articleContainer.innerHTML = \"\";\n        topArticles.forEach(({ section, articles })=>{\n            const sectionTitle = document.createElement(\"h3\");\n            sectionTitle.innerText = section.charAt(0).toUpperCase() + section.slice(1);\n            articleContainer.appendChild(sectionTitle);\n            const sectionDiv = document.createElement(\"div\");\n            sectionDiv.classList.add(\"articles-grid\");\n            articles.forEach((article)=>{\n                const imageUrl = article.multimedia && article.multimedia.length > 0 ? article.multimedia[0].url : fallbackImage;\n                const articleItem = document.createElement(\"div\");\n                articleItem.classList.add(\"article-item\");\n                articleItem.innerHTML = `\n                    <img src=\"${imageUrl}\" alt=\"${article.title || \"No Title\"}\">\n                    <div class=\"article-content\">\n                        <h4>${article.title || \"No Title\"}</h4>\n                        <p>${article.abstract || \"No Abstract Available\"}</p>\n                        <a href=\"${article.url || \"#\"}\" target=\"_blank\">Read more</a>\n                    </div>\n                `;\n                sectionDiv.appendChild(articleItem);\n            });\n            articleContainer.appendChild(sectionDiv);\n        });\n    }\n    async function fetchArticlesByKeyword(keyword, sectionTitle) {\n        try {\n            const queryParams = new URLSearchParams({\n                q: keyword,\n                \"api-key\": API_KEY\n            });\n            const response = await fetch(`https://api.nytimes.com/svc/search/v2/articlesearch.json?${queryParams.toString()}`);\n            if (!response.ok) throw new Error(\"Network response was not ok\");\n            const data = await response.json();\n            displayArticles(data.response.docs, sectionTitle);\n        } catch (error) {\n            console.error(`Error fetching ${sectionTitle} articles:`, error);\n            displayError(`Failed to fetch ${sectionTitle} articles. Please try again.`);\n        }\n    }\n    function displayArticles(articles, title) {\n        articlesTitle.innerText = title;\n        articleContainer.innerHTML = \"\";\n        const sectionDiv = document.createElement(\"div\");\n        sectionDiv.classList.add(\"articles-grid\");\n        articles.forEach((article)=>{\n            const imageUrl = article.multimedia && article.multimedia.length > 0 ? `https://static01.nyt.com/${article.multimedia[0].url}` : fallbackImage;\n            const articleItem = document.createElement(\"div\");\n            articleItem.classList.add(\"article-item\");\n            articleItem.innerHTML = `\n                <img src=\"${imageUrl}\" alt=\"${article.headline?.main || \"No Title\"}\">\n                <div class=\"article-content\">\n                    <h4>${article.headline?.main || \"No Title\"}</h4>\n                    <p>${article.snippet || \"No Snippet Available\"}</p>\n                    <a href=\"${article.web_url || \"#\"}\" target=\"_blank\">Read more</a>\n                </div>\n            `;\n            sectionDiv.appendChild(articleItem);\n        });\n        articleContainer.appendChild(sectionDiv);\n    }\n    function displayError(message) {\n        articleContainer.innerHTML = `<div class=\"error\">${message}</div>`;\n    }\n    async function performSearch() {\n        const keyword = document.getElementById(\"input-for-word\").value;\n        if (!keyword) {\n            displayError(\"Please enter a keyword to search.\");\n            return;\n        }\n        try {\n            const queryParams = new URLSearchParams({\n                q: keyword,\n                \"api-key\": API_KEY\n            });\n            const response = await fetch(`https://api.nytimes.com/svc/search/v2/articlesearch.json?${queryParams.toString()}`);\n            if (!response.ok) throw new Error(\"Network response was not ok\");\n            const data = await response.json();\n            displayArticles(data.response.docs, \"Search Results\");\n        } catch (error) {\n            console.error(\"Error fetching search results:\", error);\n            displayError(\"Failed to fetch articles. Please try again.\");\n        }\n    }\n    searchButton.addEventListener(\"click\", performSearch);\n    const sectionButtons = document.querySelectorAll(\".section-button\");\n    sectionButtons.forEach((button)=>{\n        button.addEventListener(\"click\", (event)=>{\n            event.preventDefault();\n            const keyword = button.getAttribute(\"data-keyword\");\n            fetchArticlesByKeyword(keyword, button.textContent);\n        });\n    });\n    fetchAndDisplayTopStories();\n});\n\n//# sourceMappingURL=index.e271f68e.js.map\n","document.addEventListener('DOMContentLoaded', () => {\n    const API_KEY = \"Q9g0LF0Pk3m1RpAG05nUd6uhmJO4X5sp\";\n    const articleContainer = document.getElementById(\"articles\");\n    const searchButton = document.getElementById(\"search-button\");\n    const articlesTitle = document.getElementById(\"articles-title\");\n    const fallbackImage = 'https://via.placeholder.com/300';\n\n   \n    async function fetchTopStoriesBySection(section) {\n        try {\n            const response = await fetch(`https://api.nytimes.com/svc/topstories/v2/${section}.json?api-key=${API_KEY}`);\n            if (!response.ok) throw new Error('Network response was not ok');\n            const data = await response.json();\n            return data.results.slice(0, 3); // Return top 3 stories\n        } catch (error) {\n            console.error(`Error fetching Top Stories for ${section}:`, error);\n            return [];\n        }\n    }\n\n   \n    async function fetchAndDisplayTopStories() {\n        const sections = ['world', 'business', 'technology', 'health', 'sports'];\n        const topArticles = [];\n\n        for (let section of sections) {\n            const articles = await fetchTopStoriesBySection(section);\n            if (articles.length > 0) {\n                topArticles.push({ section, articles });\n            }\n        }\n\n        displayTopStoriesBySection(topArticles);\n    }\n\n   \n    function displayTopStoriesBySection(topArticles) {\n        articleContainer.innerHTML = '';\n        topArticles.forEach(({ section, articles }) => {\n            const sectionTitle = document.createElement('h3');\n            sectionTitle.innerText = section.charAt(0).toUpperCase() + section.slice(1);\n            articleContainer.appendChild(sectionTitle);\n\n            const sectionDiv = document.createElement('div');\n            sectionDiv.classList.add('articles-grid');\n\n            articles.forEach(article => {\n                const imageUrl = article.multimedia && article.multimedia.length > 0\n                    ? article.multimedia[0].url\n                    : fallbackImage;\n\n                const articleItem = document.createElement('div');\n                articleItem.classList.add('article-item');\n                articleItem.innerHTML = `\n                    <img src=\"${imageUrl}\" alt=\"${article.title || 'No Title'}\">\n                    <div class=\"article-content\">\n                        <h4>${article.title || 'No Title'}</h4>\n                        <p>${article.abstract || 'No Abstract Available'}</p>\n                        <a href=\"${article.url || '#'}\" target=\"_blank\">Read more</a>\n                    </div>\n                `;\n                sectionDiv.appendChild(articleItem);\n            });\n            articleContainer.appendChild(sectionDiv);\n        });\n    }\n\n   \n    async function fetchArticlesByKeyword(keyword, sectionTitle) {\n        try {\n            const queryParams = new URLSearchParams({ q: keyword, 'api-key': API_KEY });\n            const response = await fetch(`https://api.nytimes.com/svc/search/v2/articlesearch.json?${queryParams.toString()}`);\n            if (!response.ok) throw new Error('Network response was not ok');\n            const data = await response.json();\n            displayArticles(data.response.docs, sectionTitle);\n        } catch (error) {\n            console.error(`Error fetching ${sectionTitle} articles:`, error);\n            displayError(`Failed to fetch ${sectionTitle} articles. Please try again.`);\n        }\n    }\n\n    \n    function displayArticles(articles, title) {\n        articlesTitle.innerText = title;\n        articleContainer.innerHTML = '';\n\n        const sectionDiv = document.createElement('div');\n        sectionDiv.classList.add('articles-grid');\n        \n        articles.forEach(article => {\n            const imageUrl = article.multimedia && article.multimedia.length > 0\n                ? `https://static01.nyt.com/${article.multimedia[0].url}`\n                : fallbackImage;\n\n            const articleItem = document.createElement('div');\n            articleItem.classList.add('article-item');\n            articleItem.innerHTML = `\n                <img src=\"${imageUrl}\" alt=\"${article.headline?.main || 'No Title'}\">\n                <div class=\"article-content\">\n                    <h4>${article.headline?.main || 'No Title'}</h4>\n                    <p>${article.snippet || 'No Snippet Available'}</p>\n                    <a href=\"${article.web_url || '#'}\" target=\"_blank\">Read more</a>\n                </div>\n            `;\n            sectionDiv.appendChild(articleItem);\n        });\n\n        articleContainer.appendChild(sectionDiv);\n    }\n\n   \n    function displayError(message) {\n        articleContainer.innerHTML = `<div class=\"error\">${message}</div>`;\n    }\n\n   \n    async function performSearch() {\n        const keyword = document.getElementById('input-for-word').value;\n        \n        if (!keyword) {\n            displayError(\"Please enter a keyword to search.\");\n            return;\n        }\n        \n        try {\n            const queryParams = new URLSearchParams({ q: keyword, 'api-key': API_KEY });\n            const response = await fetch(`https://api.nytimes.com/svc/search/v2/articlesearch.json?${queryParams.toString()}`);\n            if (!response.ok) throw new Error('Network response was not ok');\n            const data = await response.json();\n            displayArticles(data.response.docs, \"Search Results\");\n        } catch (error) {\n            console.error(\"Error fetching search results:\", error);\n            displayError(\"Failed to fetch articles. Please try again.\");\n        }\n    }\n\n   \n    searchButton.addEventListener('click', performSearch);\n\n   \n    const sectionButtons = document.querySelectorAll('.section-button');\n    sectionButtons.forEach(button => {\n        button.addEventListener('click', (event) => {\n            event.preventDefault();\n            const keyword = button.getAttribute('data-keyword');\n            fetchArticlesByKeyword(keyword, button.textContent);\n        });\n    });\n\n   \n    fetchAndDisplayTopStories();\n});\n"],"names":["document","addEventListener","API_KEY","articleContainer","getElementById","searchButton","articlesTitle","fallbackImage","fetchTopStoriesBySection","section","response","fetch","ok","Error","data","json","results","slice","error","console","fetchAndDisplayTopStories","topArticles","articles","length","push","innerHTML","forEach","sectionTitle","createElement","innerText","charAt","toUpperCase","appendChild","sectionDiv","classList","add","article","imageUrl","multimedia","url","articleItem","title","abstract","fetchArticlesByKeyword","keyword","queryParams","URLSearchParams","q","toString","displayArticles","docs","displayError","headline","main","snippet","web_url","message","performSearch","value","sectionButtons","querySelectorAll","button","event","preventDefault","getAttribute","textContent"],"version":3,"file":"index.e271f68e.js.map"}